name: Build and Release

on:
  push:
    tags:
      - "v*.*"

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Install dependencies
        run: uv sync

      - name: Extract version from tag
        id: get_version
        run: |
          $version = "${{ github.ref_name }}" -replace '^v', ''
          echo "version=$version" >> $env:GITHUB_OUTPUT
          echo "Version: $version"
        shell: pwsh

      - name: Get previous tag
        id: get_previous_tag
        run: |
          git fetch --tags
          $currentTag = "${{ github.ref_name }}"
          $previousTag = git tag --sort=-version:refname | Where-Object { $_ -ne $currentTag } | Select-Object -First 1
          if ($previousTag) {
            echo "previous_tag=$previousTag" >> $env:GITHUB_OUTPUT
            echo "Previous tag: $previousTag"
          } else {
            echo "previous_tag=" >> $env:GITHUB_OUTPUT
            echo "No previous tag found"
          }
        shell: pwsh

      - name: Build executable
        run: |
          uv run python -m PyInstaller --noconfirm --windowed --onefile --icon "icon.ico" --add-data "icon.ico;." --name "PC-Toolkit-Pro" pc_toolkit_pro.py

      - name: Rename executable
        run: |
          $version = "${{ steps.get_version.outputs.version }}"
          $oldPath = "dist\PC-Toolkit-Pro.exe"
          $newPath = "dist\PC Toolkit Pro v$version.exe"
          Move-Item -Path $oldPath -Destination $newPath
          echo "Renamed to: PC Toolkit Pro v$version.exe"
        shell: pwsh

      - name: Extract release notes
        id: get_release_notes
        run: |
          $version = "${{ steps.get_version.outputs.version }}"
          $releaseNotesPath = "RELEASE_NOTES.md"
          
          if (Test-Path $releaseNotesPath) {
            $content = Get-Content $releaseNotesPath -Raw
            
            # Extract the latest version section (from start until next version or end)
            $pattern = "# ðŸš€ PC Toolkit Pro v$version.*?(?=# ðŸš€ PC Toolkit Pro v[\d\.]+|$)"
            $match = [regex]::Match($content, $pattern, [System.Text.RegularExpressions.RegexOptions]::Singleline)
            
            if ($match.Success) {
              $releaseNotes = $match.Value.Trim()
              # Remove the main title as it will be in the release title
              $releaseNotes = $releaseNotes -replace "^# ðŸš€ PC Toolkit Pro v$version[^\r\n]*[\r\n]*", ""
              # Clean up extra whitespace
              $releaseNotes = $releaseNotes.Trim()
              
              # Escape special characters for GitHub Actions
              $releaseNotes = $releaseNotes -replace '%', '%25'
              $releaseNotes = $releaseNotes -replace '\r', '%0D'
              $releaseNotes = $releaseNotes -replace '\n', '%0A'
              
              echo "release_notes=$releaseNotes" >> $env:GITHUB_OUTPUT
              echo "Successfully extracted release notes for version $version"
            } else {
              echo "release_notes=## What's New%0A- Latest version of PC Toolkit Pro%0A- Enhanced system monitoring and management features%0A- Improved user interface and performance" >> $env:GITHUB_OUTPUT
              echo "Could not find specific version notes, using default"
            }
          } else {
            echo "release_notes=## What's New%0A- Latest version of PC Toolkit Pro%0A- Enhanced system monitoring and management features%0A- Improved user interface and performance" >> $env:GITHUB_OUTPUT
            echo "RELEASE_NOTES.md not found, using default"
          }
        shell: pwsh

      - name: Create or Update Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: PC Toolkit Pro ${{ github.ref_name }}
          body: |
            ${{ steps.get_release_notes.outputs.release_notes }}

            ### ðŸ“¥ Download
            Download the executable file below to get started.

            ### ðŸ’» System Requirements
            - Windows 10/11 (64-bit recommended)
            - No additional dependencies required
            - Administrator rights recommended for full functionality

            ### ðŸš€ Installation
            1. Download the executable file
            2. Run as administrator for best experience
            3. No installation required - portable application

            ---

            **Full Changelog**: https://github.com/${{ github.repository }}/compare/${{ steps.get_previous_tag.outputs.previous_tag }}...${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            dist/PC Toolkit Pro v${{ steps.get_version.outputs.version }}.exe
          fail_on_unmatched_files: false
          generate_release_notes: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
